{"version":3,"sources":["webpack:///component---src-pages-09-named-lines-js-86d3cc69f40d0d9cb099.js","webpack:///./src/pages/09-named-lines.js"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[[\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":\"commonjs\",\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-stage-0/lib/index.js\",\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/09-named-lines.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_Main","_Main2","_CodeBlock","_CodeBlock2","_DevHomework","_DevHomework2","_CodepenLink","_CodepenLink2","Tutorial","createElement","className","link","Homework","href","currentPageNum","tutorial","homework"],"mappings":"AAAAA,cAAc,iBAERC,q9BACA,SAAUC,EAAQC,EAASC,GAEhC,YAwBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAtBvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,iCDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,mCDcKQ,EAASP,EAAuBM,GCbrCE,EAAAT,EAAA,iCDiBKU,EAAcT,EAAuBQ,GChB1CE,EAAAX,EAAA,0CDoBKY,EAAgBX,EAAuBU,GCnB5CE,EAAAb,EAAA,mCDuBKc,EAAgBb,EAAuBY,GCrBtCE,EAAW,iBACfT,GAAAF,QAAAY,cAAA,WACEV,EAAAF,QAAAY,cAAA,yBAEAV,EAAAF,QAAAY,cAAA,gGACuF,IACrFV,EAAAF,QAAAY,cAAA,2BAFF,QAE+BV,EAAAF,QAAAY,cAAA,mCAF/B,2NAOAV,EAAAF,QAAAY,cAAA,gFAEAV,EAAAF,QAAAY,cAAAN,EAAAN,QAAA,uYAsBAE,EAAAF,QAAAY,cAAA,gKAKAV,EAAAF,QAAAY,cAAAN,EAAAN,QAAA,+lBAkCAE,EAAAF,QAAAY,cAAA,8BAEAV,EAAAF,QAAAY,cAAAN,EAAAN,QAAA,wVAaAE,EAAAF,QAAAY,cAAA,gCAEAV,EAAAF,QAAAY,cAAA,OAAKC,UAAU,eACbX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,iBAAf,UACAX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,kBAAf,WACAX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,oBAAf,aACAX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,oBAAf,aACAX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,oBAAf,aACAX,EAAAF,QAAAY,cAAA,OAAKC,UAAU,iBAAf,WAEFX,EAAAF,QAAAY,cAAAF,EAAAV,SAAac,KAAK,sDAIhBC,EAAW,iBACfb,GAAAF,QAAAY,cAAAJ,EAAAR,QAAA,KACEE,EAAAF,QAAAY,cAAA,wcAK+E,IAC7EV,EAAAF,QAAAY,cAAA,KAAGI,KAAK,kEAAR,4BANF,MDuCHrB,GAAQK,QC1BM,iBAAME,GAAAF,QAAAY,cAAAR,EAAAJ,SAAMiB,eAAgB,EAAGC,SAAUhB,EAAAF,QAAAY,cAACD,EAAD,MAAcQ,SAAUjB,EAAAF,QAAAY,cAACG,EAAD,SD8B/ErB,EAAOC,QAAUA,EAAiB","file":"component---src-pages-09-named-lines-js-86d3cc69f40d0d9cb099.js","sourcesContent":["webpackJsonp([26549370073863],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[[\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-env/lib/index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/Users/danbrown/Documents/projects/008_mozilla/playground/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/09-named-lines.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Main = __webpack_require__(\"./src/components/layout/Main.js\");\n\t\n\tvar _Main2 = _interopRequireDefault(_Main);\n\t\n\tvar _CodeBlock = __webpack_require__(\"./src/components/CodeBlock.js\");\n\t\n\tvar _CodeBlock2 = _interopRequireDefault(_CodeBlock);\n\t\n\tvar _DevHomework = __webpack_require__(\"./src/components/layout/DevHomework.js\");\n\t\n\tvar _DevHomework2 = _interopRequireDefault(_DevHomework);\n\t\n\tvar _CodepenLink = __webpack_require__(\"./src/components/CodepenLink.js\");\n\t\n\tvar _CodepenLink2 = _interopRequireDefault(_CodepenLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Tutorial = function Tutorial() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      'Named Lines'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'In a previous example, we learned how to place an item on the grid by providing the ',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-column'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-row properties'\n\t      ),\n\t      ' with specific grid lines. We can also name some or all of those grid lines when defining a grid. This allows us to use those names instead of grid lines. To name a grid line, simply add the name in square brackets:'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'To name a grid line, we simply provide the name in square brackets:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n.container {\\n  display: grid;\\n  width: 100%;\\n  height: 600px;\\n  grid-gap: 1rem;\\n  grid-template-columns:\\n    [main-start sidebar-start] 200px\\n    [sidebar-end content-start] 1fr\\n    [column3-start] 1fr\\n    [content-end main-end];\\n  grid-template-rows:\\n    [row1-start] 80px\\n    [row2-start] 1fr\\n    [row3-start] 1fr\\n    [row4-start] 100px\\n    [row4-end];\\n}\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Now that we have line names, we can use those names when placing items. Let\\'s recreate our basic layout using named lines, instead of line numbers:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n.header {\\n  grid-column: main-start / main-end;\\n  grid-row: row1-start / row2-start;\\n}\\n\\n.sidebar {\\n  grid-column: sidebar-start / sidebar-end;\\n  grid-row: row2-start / row4-start;\\n}\\n\\n.content-1 {\\n  grid-column: content-start / content-end;\\n  grid-row: row2-start / row3-start;\\n}\\n\\n.content-2 {\\n  grid-column: content-start / column3-start;\\n  grid-row: row3-start / row4-start;\\n}\\n\\n.content-3 {\\n  grid-column: column3-start / content-end;\\n  grid-row: row3-start / row4-start;\\n}\\n\\n.footer {\\n  grid-column: main-start / main-end;\\n  grid-row: row4-start / row4-end;\\n}\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Here is our HTML:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n<div className=\"container\">\\n  <div className=\"item header\">header</div>\\n  <div className=\"item sidebar\">sidebar</div>\\n  <div className=\"item content-1\">Content-1</div>\\n  <div className=\"item content-2\">Content-2</div>\\n  <div className=\"item content-3\">Content-3</div>\\n  <div className=\"item footer\">footer</div>\\n</div>\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Here is the result:'\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'container-9' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item header-9' },\n\t        'header'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item sidebar-9' },\n\t        'sidebar'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-1-9' },\n\t        'Content-1'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-2-9' },\n\t        'Content-2'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item content-3-9' },\n\t        'Content-3'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'item footer-9' },\n\t        'footer'\n\t      )\n\t    ),\n\t    _react2.default.createElement(_CodepenLink2.default, { link: 'https://codepen.io/mozilladevelopers/pen/dVpQVV' })\n\t  );\n\t};\n\t\n\tvar Homework = function Homework() {\n\t  return _react2.default.createElement(\n\t    _DevHomework2.default,\n\t    null,\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Did you know you can customize the color of the grid overlay in Firefox DevTools? The above example is on a white background, and the default purple may not be the best color to use. When selecting an overlay grid to display, you will see a circle next to the grid name that indicates the color of the overlay. Click on that circle, and you can customize the color to whatever you\\'d like. Try a different color, such as red. Don\\'t have Firefox?',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: 'https://www.mozilla.org/en-US/firefox/channel/desktop/#nightly' },\n\t        'Download Firefox Nightly'\n\t      ),\n\t      '.'\n\t    )\n\t  );\n\t};\n\t\n\texports.default = function () {\n\t  return _react2.default.createElement(_Main2.default, { currentPageNum: 9, tutorial: _react2.default.createElement(Tutorial, null), homework: _react2.default.createElement(Homework, null) });\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-09-named-lines-js-86d3cc69f40d0d9cb099.js","import React from 'react';\nimport Main from '../components/layout/Main';\nimport CodeBlock from '../components/CodeBlock';\nimport DevHomework from '../components/layout/DevHomework';\nimport CodepenLink from '../components/CodepenLink';\n\nconst Tutorial = () => (\n  <div>\n    <h2>Named Lines</h2>\n\n    <p>\n      In a previous example, we learned how to place an item on the grid by providing the {' '}\n      <code>grid-column</code> and <code>grid-row properties</code> with specific grid lines. We can\n      also name some or all of those grid lines when defining a grid. This allows us to use those\n      names instead of grid lines. To name a grid line, simply add the name in square brackets:\n    </p>\n\n    <p>To name a grid line, we simply provide the name in square brackets:</p>\n\n    <CodeBlock>\n      {`\n.container {\n  display: grid;\n  width: 100%;\n  height: 600px;\n  grid-gap: 1rem;\n  grid-template-columns:\n    [main-start sidebar-start] 200px\n    [sidebar-end content-start] 1fr\n    [column3-start] 1fr\n    [content-end main-end];\n  grid-template-rows:\n    [row1-start] 80px\n    [row2-start] 1fr\n    [row3-start] 1fr\n    [row4-start] 100px\n    [row4-end];\n}\n      `}\n    </CodeBlock>\n\n    <p>\n      Now that we have line names, we can use those names when placing items. Let's recreate our\n      basic layout using named lines, instead of line numbers:\n    </p>\n\n    <CodeBlock>\n      {`\n.header {\n  grid-column: main-start / main-end;\n  grid-row: row1-start / row2-start;\n}\n\n.sidebar {\n  grid-column: sidebar-start / sidebar-end;\n  grid-row: row2-start / row4-start;\n}\n\n.content-1 {\n  grid-column: content-start / content-end;\n  grid-row: row2-start / row3-start;\n}\n\n.content-2 {\n  grid-column: content-start / column3-start;\n  grid-row: row3-start / row4-start;\n}\n\n.content-3 {\n  grid-column: column3-start / content-end;\n  grid-row: row3-start / row4-start;\n}\n\n.footer {\n  grid-column: main-start / main-end;\n  grid-row: row4-start / row4-end;\n}\n      `}\n    </CodeBlock>\n\n    <p>Here is our HTML:</p>\n\n    <CodeBlock>\n      {`\n<div className=\"container\">\n  <div className=\"item header\">header</div>\n  <div className=\"item sidebar\">sidebar</div>\n  <div className=\"item content-1\">Content-1</div>\n  <div className=\"item content-2\">Content-2</div>\n  <div className=\"item content-3\">Content-3</div>\n  <div className=\"item footer\">footer</div>\n</div>\n      `}\n    </CodeBlock>\n\n    <p>Here is the result:</p>\n\n    <div className=\"container-9\">\n      <div className=\"item header-9\">header</div>\n      <div className=\"item sidebar-9\">sidebar</div>\n      <div className=\"item content-1-9\">Content-1</div>\n      <div className=\"item content-2-9\">Content-2</div>\n      <div className=\"item content-3-9\">Content-3</div>\n      <div className=\"item footer-9\">footer</div>\n    </div>\n    <CodepenLink link=\"https://codepen.io/mozilladevelopers/pen/dVpQVV\" />\n  </div>\n);\n\nconst Homework = () => (\n  <DevHomework>\n    <p>\n      Did you know you can customize the color of the grid overlay in Firefox DevTools? The above\n      example is on a white background, and the default purple may not be the best color to use.\n      When selecting an overlay grid to display, you will see a circle next to the grid name that\n      indicates the color of the overlay. Click on that circle, and you can customize the color to\n      whatever you'd like. Try a different color, such as red. Don't have Firefox?{' '}\n      <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/#nightly\">\n        Download Firefox Nightly\n      </a>.\n    </p>\n  </DevHomework>\n);\n\nexport default () => <Main currentPageNum={9} tutorial={<Tutorial />} homework={<Homework />} />;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/09-named-lines.js"],"sourceRoot":""}